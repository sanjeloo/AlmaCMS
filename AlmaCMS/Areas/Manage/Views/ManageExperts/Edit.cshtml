@model AlmaCMS.ViewModels.Expert.VMEditExpert

@{
    ViewBag.Title = "ویرایش کارشناس";
    Layout = "~/Areas/Manage/Views/Shared/_LayoutAdmin.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.SelectedFeatures)
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <h4 class="panel-title">ویرایش کارشناس</h4>
                    <ul class="panel-tool-options">
                        <li><a data-rel="collapse" href="#"><i class="icon-down-open"></i></a></li>
                        <li><a data-rel="reload" href="#"><i class="icon-arrows-ccw"></i></a></li>
                        <li><a href="/Manage/ManageExperts"><i class="icon-left"></i></a></li>
                        <li><a data-rel="close" href="#"><i class="icon-cancel"></i></a></li>
                    </ul>
                </div>
                <div class="panel-body offer_content">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.id)
                            @Html.HiddenFor(model => model.UserID)


                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    نام
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    نام خانوادگی
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Family, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    کد ملی
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NationalCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NationalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    موبایل
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    تاریخ تولد
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    تلفن
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    آدرس
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-md-2">
                                    توضیحات
                                </div>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Descriptions, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-10">
                                    <div class="form-group input-group col-md-12 upload-form-group" style="margin-right:80px;">
                                        <span class="input-group-btn ">
                                            <button id="btnUpload" type="button" class="btn btn-blue" onclick="openCustomRoxy2()"><i class="fa fa-upload"></i>آپلود تصویر</button>
                                        </span>
                                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control TxtImg txtImageName text-left", @id = "ImageUrl", @onchange = "setimageurl();", @onkeyup = "this.onchange();", @oninput = "this.onchange();", @onpaste = "this.onchange();" } })
                                    </div>


                                    <div id="DivImg" class="text-center" style="text-align: center!important">
                                        @if (!string.IsNullOrEmpty(Model.Image))
                                        {
                                            <img src="@Model.Image" id="ImgPriview" class="img-responsive ImgPriview pull-right" style="margin-bottom:15px;" />

                                        }
                                        else
                                        {
                                            <img src="~/Content/images/noimage.gif" id="ImgPriview" class="img-responsive ImgPriview pull-right" style="margin-bottom:15px;" />

                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-4">
                                    <input type="submit" value="ثبت" class="btn btn-success btn-block" />
                                </div>
                            </div>
                        </div>


                    }
                </div>
            </div>

        </div>
    </div>
}
<div style="display:none">
    <span id="drag-fixed"></span>
    <span id="basic-slider"></span>
    <span id="range-slider"></span>
</div>
<div id="roxyCustomPanel2" style="display: none;">
    <iframe src="/Scripts/RoxyFileManager/index.html?integration=custom&txtFieldId=ImageUrl&ImageID=ImgPriview" style="width:100%;height:100%" frameborder="0"></iframe>
</div>

@section Scripts{
    <script src="~/Areas/Manage/Content/plugins/nouislider/js/nouislider.min.js"></script>
    <script src="~/Areas/Manage/Content/plugins/jasny/js/jasny-bootstrap.min.js"></script>
    <script src="~/Areas/Manage/Content/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/Areas/Manage/Content/plugins/colorpicker/js/bootstrap-colorpicker.min.js"></script>
    <script src="~/Areas/Manage/Content/js/form-advanced-script.js"></script>
    <script>
        function openCustomRoxy2() {
            $('#roxyCustomPanel2').dialog({ modal: true, width: 875, height: 600 });
        }
        function closeCustomRoxy2() {
            $('#roxyCustomPanel2').dialog('close');
        }
    </script>
    <script type="text/javascript">
        function setimageurl() {
            $('#ImgPriview').attr('src', $('#ImageUrl').val());
        }
    </script>
    <script>
        function updateItems() {
            var SelectedItemsList = "";
            $('.select2-selection__rendered').each(function () {
                var list = $(this).find('.select2-selection__choice');
                $(list.get().reverse()).each(function () {
                    var currentLine = $(this).attr('Title');
                    $("#select-state > option").each(function () {
                        if (this.text == currentLine) {
                            SelectedItemsList = SelectedItemsList + this.value + ",";
                        }
                    });
                })
            });
            $('#SelectedFeatures').val(SelectedItemsList);
        }
        $('.select2').change(function () {
            setTimeout(updateItems, 500);
        });
    </script>
}
